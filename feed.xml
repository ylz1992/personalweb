<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.4.1">Jekyll</generator><link href="https://ylz1992.github.io/personalweb/feed.xml" rel="self" type="application/atom+xml"/><link href="https://ylz1992.github.io/personalweb/" rel="alternate" type="text/html" hreflang="en"/><updated>2025-05-12T08:21:12+00:00</updated><id>https://ylz1992.github.io/personalweb/feed.xml</id><title type="html">blank</title><subtitle>Hey what&apos;s up </subtitle><entry><title type="html">Conditioned Denoising Helps Defend Against Adversarial Attacks</title><link href="https://ylz1992.github.io/personalweb/blog/2024/Conditioned-Denoising/" rel="alternate" type="text/html" title="Conditioned Denoising Helps Defend Against Adversarial Attacks"/><published>2024-12-10T00:00:00+00:00</published><updated>2024-12-10T00:00:00+00:00</updated><id>https://ylz1992.github.io/personalweb/blog/2024/%20Conditioned%20Denoising</id><content type="html" xml:base="https://ylz1992.github.io/personalweb/blog/2024/Conditioned-Denoising/"><![CDATA[<div class="row"> <div class="col-sm mt-3 mt-md-0"> <iframe src="/personalweb/assets/pdf/CDHDAAA.pdf" width="100%" height="600px" style="border: none;"></iframe> </div> </div>]]></content><author><name></name></author><category term="class"/><category term="Personal"/><summary type="html"><![CDATA[project]]></summary></entry><entry><title type="html">Investigating the Robustness of Multimodal Generative Models Against Adversarial Attack</title><link href="https://ylz1992.github.io/personalweb/blog/2024/Investigating-the-Robustness/" rel="alternate" type="text/html" title="Investigating the Robustness of Multimodal Generative Models Against Adversarial Attack"/><published>2024-12-10T00:00:00+00:00</published><updated>2024-12-10T00:00:00+00:00</updated><id>https://ylz1992.github.io/personalweb/blog/2024/%20Investigating%20the%20Robustness</id><content type="html" xml:base="https://ylz1992.github.io/personalweb/blog/2024/Investigating-the-Robustness/"><![CDATA[<div class="row"> <div class="col-sm mt-3 mt-md-0"> <iframe src="/personalweb/assets/pdf/Investigating the Robustness of Multimodal Generative Models Against Adversarial Attack.pdf" width="100%" height="600px" style="border: none;"></iframe> </div> </div>]]></content><author><name></name></author><category term="class"/><category term="Personal"/><summary type="html"><![CDATA[project]]></summary></entry><entry><title type="html">Adversarial Attacks in Vision-Language Models</title><link href="https://ylz1992.github.io/personalweb/blog/2024/jailbreak-VLM/" rel="alternate" type="text/html" title="Adversarial Attacks in Vision-Language Models"/><published>2024-11-10T00:00:00+00:00</published><updated>2024-11-10T00:00:00+00:00</updated><id>https://ylz1992.github.io/personalweb/blog/2024/%20jailbreak%20VLM</id><content type="html" xml:base="https://ylz1992.github.io/personalweb/blog/2024/jailbreak-VLM/"><![CDATA[<p>Under the guidance of Professor Zsolt Kira, I led a project focused on exploring adversarial attacks in Vision-Language Models (VLMs). Using the CLIP text encoder, I extracted harmful concepts such as nudity and violence, injected them into latent spaces, and generated optimized prompts through gradient-based (PeZ) and non-gradient-based (Genetic Algorithm) methods. These optimized prompts successfully bypassed safety mechanisms in text-to-image (T2I) models like Stable Diffusion and Flex, enabling the generation of inappropriate images.</p> <p>Building on this work, I am now extending these attacks to other modalities, such as audio and depth, using ImageBind. This research aims to uncover vulnerabilities across multi-modal systems, enhancing our understanding of adversarial techniques and reinforcing my commitment to advancing trustworthy AI.</p> <p>This project has strengthened my expertise in adversarial attacks, prompt optimization, and multi-modal vulnerabilities.</p> <p><a href="https://github.com/ylz1992/Jailbreak_VLM/tree/master/image" style="color: #007ACC;"><b>outcome image</b></a></p> <p><a href="https://github.com/ylz1992/Jailbreak_VLM" style="color: #007ACC;"><b>GitHub Repo</b></a></p>]]></content><author><name></name></author><category term="class"/><category term="Personal"/><summary type="html"><![CDATA[project]]></summary></entry><entry><title type="html">Dynamic Programming</title><link href="https://ylz1992.github.io/personalweb/blog/2024/Dynamic-Programing-copy/" rel="alternate" type="text/html" title="Dynamic Programming"/><published>2024-04-26T00:00:00+00:00</published><updated>2024-04-26T00:00:00+00:00</updated><id>https://ylz1992.github.io/personalweb/blog/2024/Dynamic-Programing%20copy</id><content type="html" xml:base="https://ylz1992.github.io/personalweb/blog/2024/Dynamic-Programing-copy/"><![CDATA[<p>Base Model-Longest Common Subsequence: #1143, #712, #718ï¼Œ#583</p> <div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">longestCommonSubsequence</span><span class="o">(</span><span class="nc">String</span> <span class="n">text1</span><span class="o">,</span> <span class="nc">String</span> <span class="n">text2</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">int</span> <span class="n">m</span> <span class="o">=</span> <span class="n">text1</span><span class="o">.</span><span class="na">length</span><span class="o">();</span>
        <span class="kt">int</span> <span class="n">n</span> <span class="o">=</span> <span class="n">text2</span><span class="o">.</span><span class="na">length</span><span class="o">();</span>
        <span class="kt">int</span><span class="o">[][]</span> <span class="n">dp</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">m</span><span class="o">+</span><span class="mi">1</span><span class="o">][</span><span class="n">n</span><span class="o">+</span><span class="mi">1</span><span class="o">];</span>
        
        <span class="k">if</span> <span class="o">(</span><span class="n">m</span> <span class="o">==</span> <span class="mi">0</span> <span class="o">||</span> <span class="n">n</span><span class="o">==</span><span class="mi">0</span><span class="o">){</span><span class="k">return</span> <span class="mi">0</span><span class="o">;}</span>
        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;=</span><span class="n">m</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span><span class="n">dp</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="mi">0</span><span class="o">]</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;};</span>
        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;=</span><span class="n">n</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span><span class="n">dp</span><span class="o">[</span><span class="mi">0</span><span class="o">][</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;};</span>
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;=</span><span class="n">m</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
            <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">1</span><span class="o">;</span><span class="n">j</span><span class="o">&lt;=</span><span class="n">n</span><span class="o">;</span><span class="n">j</span><span class="o">++){</span>
                <span class="k">if</span> <span class="o">(</span><span class="n">text1</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="o">)==</span><span class="n">text2</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">j</span><span class="o">-</span><span class="mi">1</span><span class="o">)){</span>
                    <span class="n">dp</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">]</span> <span class="o">=</span> <span class="n">dp</span><span class="o">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="o">][</span><span class="n">j</span><span class="o">-</span><span class="mi">1</span><span class="o">]+</span><span class="mi">1</span><span class="o">;</span>
                <span class="o">}</span>
                <span class="k">else</span><span class="o">{</span>
                    <span class="n">dp</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">]</span> <span class="o">=</span> <span class="nc">Math</span><span class="o">.</span><span class="na">max</span><span class="o">(</span><span class="n">dp</span><span class="o">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="o">][</span><span class="n">j</span><span class="o">],</span><span class="n">dp</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">-</span><span class="mi">1</span><span class="o">]);</span>
                <span class="o">}</span>
            <span class="o">}</span>
        <span class="o">}</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div> <p>Base Model - Max Length:</p> <div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">//maxLength Problem, </span>
<span class="c1">//Given an integer array nums, return the length of the longest strictly increasing</span>
<span class="c1">//subsequence</span>
<span class="c1">//Example 1:</span>
<span class="c1">//Input: nums = [10,9,2,5,3,7,101,18]</span>
<span class="c1">//Output: 4</span>
<span class="c1">//Explanation: The longest increasing subsequence is [2,3,7,101], therefore the length is 4.</span>

<span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">lengthOfLIS</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">nums</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">if</span><span class="o">(</span><span class="n">nums</span><span class="o">==</span> <span class="kc">null</span> <span class="o">||</span> <span class="n">nums</span><span class="o">.</span><span class="na">length</span> <span class="o">==</span><span class="mi">0</span><span class="o">){</span><span class="k">return</span> <span class="mi">0</span><span class="o">;}</span>
        <span class="kt">int</span> <span class="n">n</span> <span class="o">=</span> <span class="n">nums</span><span class="o">.</span><span class="na">length</span><span class="o">;</span>
        <span class="kt">int</span><span class="o">[]</span> <span class="n">dp</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">n</span><span class="o">];</span>
        <span class="kt">int</span> <span class="n">maxL</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">n</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
            <span class="n">dp</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span><span class="mi">1</span><span class="o">;</span>
            <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">j</span><span class="o">&lt;</span><span class="n">i</span><span class="o">;</span><span class="n">j</span><span class="o">++){</span>
                <span class="k">if</span><span class="o">(</span><span class="n">nums</span><span class="o">[</span><span class="n">i</span><span class="o">]&gt;</span><span class="n">nums</span><span class="o">[</span><span class="n">j</span><span class="o">]){</span>
                    <span class="n">dp</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="nc">Math</span><span class="o">.</span><span class="na">max</span><span class="o">(</span><span class="n">dp</span><span class="o">[</span><span class="n">i</span><span class="o">],</span><span class="n">dp</span><span class="o">[</span><span class="n">j</span><span class="o">]+</span><span class="mi">1</span><span class="o">);</span>
                <span class="o">}</span>
            <span class="o">}</span>
            <span class="n">maxL</span> <span class="o">=</span> <span class="nc">Math</span><span class="o">.</span><span class="na">max</span><span class="o">(</span><span class="n">maxL</span><span class="o">,</span><span class="n">dp</span><span class="o">[</span><span class="n">i</span><span class="o">]);</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">maxL</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div> <p>Base Model- Unique Path: # 62, #63, #64</p> <div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">//Unique Path</span>
<span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="kd">private</span> <span class="kt">int</span> <span class="n">m</span><span class="o">;</span>
    <span class="kd">private</span> <span class="kt">int</span> <span class="n">n</span><span class="o">;</span>
    <span class="kd">private</span> <span class="kt">int</span><span class="o">[][]</span> <span class="n">dp</span><span class="o">;</span>
    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">uniquePaths</span><span class="o">(</span><span class="kt">int</span> <span class="n">m</span><span class="o">,</span> <span class="kt">int</span> <span class="n">n</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">m</span> <span class="o">=</span> <span class="n">m</span><span class="o">;</span>
        <span class="k">this</span><span class="o">.</span><span class="na">n</span> <span class="o">=</span> <span class="n">n</span><span class="o">;</span>
        <span class="k">this</span><span class="o">.</span><span class="na">dp</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">m</span><span class="o">][</span><span class="n">n</span><span class="o">];</span>
        <span class="k">return</span> <span class="nf">dfs</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span><span class="mi">0</span><span class="o">);</span>
    <span class="o">};</span>
    <span class="kd">private</span> <span class="kt">int</span> <span class="nf">dfs</span><span class="o">(</span><span class="kt">int</span> <span class="n">x</span><span class="o">,</span><span class="kt">int</span> <span class="n">y</span><span class="o">){</span>
        <span class="k">if</span><span class="o">(</span><span class="n">x</span><span class="o">&gt;</span><span class="n">m</span><span class="o">-</span><span class="mi">1</span> <span class="o">||</span> <span class="n">y</span><span class="o">&gt;</span><span class="n">n</span><span class="o">-</span><span class="mi">1</span><span class="o">){</span><span class="k">return</span> <span class="mi">0</span><span class="o">;};</span>
        <span class="k">if</span><span class="o">(</span><span class="n">x</span><span class="o">==</span><span class="n">m</span><span class="o">-</span><span class="mi">1</span> <span class="o">&amp;&amp;</span> <span class="n">y</span><span class="o">==</span><span class="n">n</span><span class="o">-</span><span class="mi">1</span><span class="o">){</span><span class="k">return</span> <span class="mi">1</span><span class="o">;};</span>
        <span class="k">if</span><span class="o">(</span><span class="n">dp</span><span class="o">[</span><span class="n">x</span><span class="o">][</span><span class="n">y</span><span class="o">]==</span><span class="mi">0</span><span class="o">){</span><span class="k">return</span> <span class="n">dp</span><span class="o">[</span><span class="n">x</span><span class="o">][</span><span class="n">y</span><span class="o">]</span> <span class="o">=</span><span class="n">dfs</span><span class="o">(</span><span class="n">x</span><span class="o">+</span><span class="mi">1</span><span class="o">,</span><span class="n">y</span><span class="o">)</span> <span class="o">+</span><span class="n">dfs</span><span class="o">(</span><span class="n">x</span><span class="o">,</span><span class="n">y</span><span class="o">+</span><span class="mi">1</span><span class="o">)</span> <span class="o">;};</span>
        <span class="k">return</span> <span class="n">dp</span><span class="o">[</span><span class="n">x</span><span class="o">][</span><span class="n">y</span><span class="o">];</span>
    <span class="o">};</span>
    
</code></pre></div></div> <div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">//Min path sum</span>
<span class="nc">No</span><span class="o">.</span><span class="mi">64</span> <span class="no">DP</span> <span class="n">shortest</span> <span class="n">path</span>

<span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">minPathSum</span><span class="o">(</span><span class="kt">int</span><span class="o">[][]</span> <span class="n">grid</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">int</span> <span class="n">row</span> <span class="o">=</span> <span class="n">grid</span><span class="o">.</span><span class="na">length</span><span class="o">;</span>
        <span class="c1">//if(row == 0){return 0;};</span>
        <span class="kt">int</span> <span class="n">col</span> <span class="o">=</span> <span class="n">grid</span><span class="o">[</span><span class="mi">0</span><span class="o">].</span><span class="na">length</span><span class="o">;</span>
        
        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">r</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span><span class="n">r</span><span class="o">&lt;</span><span class="n">row</span><span class="o">;</span><span class="n">r</span><span class="o">++){</span>
            <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">c</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span><span class="n">c</span><span class="o">&lt;</span><span class="n">col</span><span class="o">;</span><span class="n">c</span><span class="o">++){</span>
                <span class="k">if</span><span class="o">(</span><span class="n">r</span> <span class="o">==</span> <span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="n">c</span> <span class="o">==</span> <span class="mi">0</span><span class="o">){</span><span class="k">continue</span><span class="o">;}</span>
                <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">r</span> <span class="o">==</span> <span class="mi">0</span><span class="o">){</span> <span class="n">grid</span><span class="o">[</span><span class="n">r</span><span class="o">][</span><span class="n">c</span><span class="o">]</span> <span class="o">+=</span> <span class="n">grid</span><span class="o">[</span><span class="n">r</span><span class="o">][</span><span class="n">c</span><span class="o">-</span><span class="mi">1</span><span class="o">];}</span>
                <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">c</span> <span class="o">==</span> <span class="mi">0</span><span class="o">){</span><span class="n">grid</span><span class="o">[</span><span class="n">r</span><span class="o">][</span><span class="n">c</span><span class="o">]</span> <span class="o">+=</span> <span class="n">grid</span><span class="o">[</span><span class="n">r</span><span class="o">-</span><span class="mi">1</span><span class="o">][</span><span class="n">c</span><span class="o">];}</span>
                <span class="k">else</span><span class="o">{</span><span class="n">grid</span><span class="o">[</span><span class="n">r</span><span class="o">][</span><span class="n">c</span><span class="o">]</span> <span class="o">+=</span> <span class="nc">Math</span><span class="o">.</span><span class="na">min</span><span class="o">(</span><span class="n">grid</span><span class="o">[</span><span class="n">r</span><span class="o">-</span><span class="mi">1</span><span class="o">][</span><span class="n">c</span><span class="o">],</span><span class="n">grid</span><span class="o">[</span><span class="n">r</span><span class="o">][</span><span class="n">c</span><span class="o">-</span><span class="mi">1</span><span class="o">]);}</span>
            <span class="o">}</span>

        <span class="o">}</span>
        <span class="k">return</span> <span class="n">grid</span><span class="o">[</span><span class="n">row</span><span class="o">-</span><span class="mi">1</span><span class="o">][</span><span class="n">col</span><span class="o">-</span><span class="mi">1</span><span class="o">];</span>

    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div> <p>Base Model-Dp for Max square (filled with 1): #221, # 304, #85</p> <div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="no">DP</span> <span class="k">for</span> <span class="n">max</span> <span class="n">square</span><span class="o">.</span>
  
<span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">maximalSquare</span><span class="o">(</span><span class="kt">char</span><span class="o">[][]</span> <span class="n">matrix</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">if</span><span class="o">(</span><span class="n">matrix</span> <span class="o">==</span> <span class="kc">null</span> <span class="o">||</span> <span class="n">matrix</span><span class="o">.</span><span class="na">length</span> <span class="o">==</span><span class="mi">0</span> <span class="o">||</span> <span class="n">matrix</span><span class="o">[</span><span class="mi">0</span><span class="o">].</span><span class="na">length</span> <span class="o">==</span> <span class="mi">0</span><span class="o">){</span><span class="k">return</span> <span class="mi">0</span><span class="o">;}</span>
        <span class="kt">int</span> <span class="n">m</span> <span class="o">=</span> <span class="n">matrix</span><span class="o">.</span><span class="na">length</span><span class="o">;</span>
        <span class="kt">int</span> <span class="n">n</span> <span class="o">=</span> <span class="n">matrix</span><span class="o">[</span><span class="mi">0</span><span class="o">].</span><span class="na">length</span><span class="o">;</span>
        <span class="kt">int</span><span class="o">[][]</span><span class="n">dp</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">m</span><span class="o">+</span><span class="mi">1</span><span class="o">][</span><span class="n">n</span><span class="o">+</span><span class="mi">1</span><span class="o">];</span>
        <span class="kt">int</span> <span class="n">maxS</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;=</span><span class="n">m</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
            <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">1</span><span class="o">;</span><span class="n">j</span><span class="o">&lt;=</span><span class="n">n</span><span class="o">;</span><span class="n">j</span><span class="o">++){</span>
                <span class="k">if</span><span class="o">(</span><span class="n">matrix</span><span class="o">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="o">][</span><span class="n">j</span><span class="o">-</span><span class="mi">1</span><span class="o">]==</span><span class="sc">'1'</span><span class="o">){</span>
                    <span class="n">dp</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">]</span> <span class="o">=</span> <span class="nc">Math</span><span class="o">.</span><span class="na">min</span><span class="o">(</span><span class="nc">Math</span><span class="o">.</span><span class="na">min</span><span class="o">(</span><span class="n">dp</span><span class="o">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="o">][</span><span class="n">j</span><span class="o">],</span><span class="n">dp</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">-</span><span class="mi">1</span><span class="o">]),</span><span class="n">dp</span><span class="o">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="o">][</span><span class="n">j</span><span class="o">-</span><span class="mi">1</span><span class="o">])+</span><span class="mi">1</span><span class="o">;</span>
                    <span class="n">maxS</span> <span class="o">=</span> <span class="nc">Math</span><span class="o">.</span><span class="na">max</span><span class="o">(</span><span class="n">maxS</span><span class="o">,</span> <span class="n">dp</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">]);</span>
                <span class="o">}</span>

            <span class="o">}</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">maxS</span> <span class="o">*</span> <span class="n">maxS</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div> <p>Base Model-House Robber: #198, #740, #213, #309,#790,#801</p> <div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">//maximize the number of points nums[i], while delete nums[i-1]</span>
<span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">deleteAndEarn</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">nums</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">if</span> <span class="o">(</span><span class="n">nums</span> <span class="o">==</span> <span class="kc">null</span> <span class="o">||</span> <span class="n">nums</span><span class="o">.</span><span class="na">length</span> <span class="o">==</span> <span class="mi">0</span><span class="o">){</span><span class="k">return</span> <span class="mi">0</span><span class="o">;}</span>
        <span class="kt">int</span> <span class="n">max</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="nl">num:</span> <span class="n">nums</span><span class="o">){</span>
            <span class="n">max</span> <span class="o">=</span> <span class="nc">Math</span><span class="o">.</span><span class="na">max</span><span class="o">(</span><span class="n">max</span><span class="o">,</span> <span class="n">num</span><span class="o">);</span>
        <span class="o">}</span>
        <span class="kt">int</span><span class="o">[]</span> <span class="n">points</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">max</span><span class="o">+</span><span class="mi">1</span><span class="o">];</span>
        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="nl">num:</span> <span class="n">nums</span><span class="o">){</span>
            <span class="n">points</span><span class="o">[</span><span class="n">num</span><span class="o">]</span> <span class="o">+=</span> <span class="n">num</span><span class="o">;</span>
        <span class="o">}</span>
        <span class="kt">int</span><span class="o">[]</span> <span class="n">dp</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">max</span><span class="o">+</span><span class="mi">1</span><span class="o">];</span>
        <span class="n">dp</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span> <span class="o">=</span> <span class="n">points</span><span class="o">[</span><span class="mi">0</span><span class="o">];</span>
        <span class="n">dp</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span> <span class="o">=</span> <span class="nc">Math</span><span class="o">.</span><span class="na">max</span><span class="o">(</span><span class="n">points</span><span class="o">[</span><span class="mi">0</span><span class="o">],</span><span class="n">points</span><span class="o">[</span><span class="mi">1</span><span class="o">]);</span>
        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">2</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;=</span><span class="n">max</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
            <span class="n">dp</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="nc">Math</span><span class="o">.</span><span class="na">max</span><span class="o">(</span><span class="n">dp</span><span class="o">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="o">],</span><span class="n">dp</span><span class="o">[</span><span class="n">i</span><span class="o">-</span><span class="mi">2</span><span class="o">]+</span> <span class="n">points</span><span class="o">[</span><span class="n">i</span><span class="o">]);</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">dp</span><span class="o">[</span><span class="n">max</span><span class="o">];</span>

</code></pre></div></div> <div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="no">DP</span><span class="o">,</span> <span class="n">rob1</span><span class="o">,</span> <span class="n">rob2</span> <span class="n">keep</span> <span class="n">track</span> <span class="n">of</span> <span class="n">the</span> <span class="n">maximum</span> <span class="n">money</span> <span class="n">robbed</span> <span class="n">up</span> <span class="n">to</span> <span class="n">two</span> <span class="n">steps</span> <span class="n">back</span> <span class="n">and</span> <span class="n">one</span> <span class="n">step</span> <span class="n">back</span>
<span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">rob</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">nums</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">if</span><span class="o">(</span><span class="n">nums</span> <span class="o">==</span> <span class="kc">null</span> <span class="o">||</span> <span class="n">nums</span><span class="o">.</span><span class="na">length</span> <span class="o">==</span><span class="mi">0</span><span class="o">){</span><span class="k">return</span> <span class="mi">0</span><span class="o">;}</span>
        <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">nums</span><span class="o">.</span><span class="na">length</span> <span class="o">==</span><span class="mi">1</span><span class="o">){</span><span class="k">return</span> <span class="n">nums</span><span class="o">[</span><span class="mi">0</span><span class="o">];}</span>
        <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">nums</span><span class="o">.</span><span class="na">length</span> <span class="o">==</span><span class="mi">2</span><span class="o">){</span><span class="k">return</span> <span class="nc">Math</span><span class="o">.</span><span class="na">max</span><span class="o">(</span><span class="n">nums</span><span class="o">[</span><span class="mi">0</span><span class="o">],</span><span class="n">nums</span><span class="o">[</span><span class="mi">1</span><span class="o">]);}</span>
        <span class="k">return</span> <span class="nc">Math</span><span class="o">.</span><span class="na">max</span><span class="o">(</span><span class="n">robLinear</span><span class="o">(</span><span class="n">nums</span><span class="o">,</span><span class="mi">0</span><span class="o">,</span><span class="n">nums</span><span class="o">.</span><span class="na">length</span> <span class="o">-</span><span class="mi">2</span><span class="o">),</span> <span class="n">robLinear</span><span class="o">(</span><span class="n">nums</span><span class="o">,</span><span class="mi">1</span><span class="o">,</span><span class="n">nums</span><span class="o">.</span><span class="na">length</span> <span class="o">-</span><span class="mi">1</span><span class="o">));</span>

    <span class="o">}</span>
    <span class="kd">private</span> <span class="kt">int</span> <span class="nf">robLinear</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">nums</span><span class="o">,</span> <span class="kt">int</span> <span class="n">start</span><span class="o">,</span> <span class="kt">int</span> <span class="n">end</span><span class="o">){</span>
        <span class="kt">int</span> <span class="n">rob1</span> <span class="o">=</span><span class="mi">0</span><span class="o">,</span> <span class="n">rob2</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="n">start</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;=</span> <span class="n">end</span><span class="o">;</span> <span class="n">i</span><span class="o">++){</span>
            <span class="kt">int</span> <span class="n">newRob</span> <span class="o">=</span> <span class="nc">Math</span><span class="o">.</span><span class="na">max</span><span class="o">(</span><span class="n">rob1</span> <span class="o">+</span> <span class="n">nums</span><span class="o">[</span><span class="n">i</span><span class="o">],</span> <span class="n">rob2</span><span class="o">);</span>
            <span class="n">rob1</span>  <span class="o">=</span> <span class="n">rob2</span><span class="o">;</span>
            <span class="n">rob2</span> <span class="o">=</span> <span class="n">newRob</span><span class="o">;</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">rob2</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>]]></content><author><name></name></author><category term="class"/><category term="Personal"/><summary type="html"><![CDATA[Coding]]></summary></entry><entry><title type="html">ML model in Real Estate Market Predict</title><link href="https://ylz1992.github.io/personalweb/blog/2024/ML-model/" rel="alternate" type="text/html" title="ML model in Real Estate Market Predict"/><published>2024-03-26T00:00:00+00:00</published><updated>2024-03-26T00:00:00+00:00</updated><id>https://ylz1992.github.io/personalweb/blog/2024/ML%20model</id><content type="html" xml:base="https://ylz1992.github.io/personalweb/blog/2024/ML-model/"><![CDATA[<p>This project leverages the Ames Housing Dataset to predict real estate prices using advanced machine learning techniques. By combining methods like DBScan for outlier detection, K-Means clustering for segmentation, and models including Linear Regression, Neural Networks, and Random Forests, it highlights the importance of data preprocessing and robust algorithms in achieving high prediction accuracy. The approach provides valuable insights into the factors driving housing prices, aiding stakeholders in making informed decisions.</p> <p><a href="https://ylz1992.github.io/MLProject/" style="color: #007ACC;"><b>Project Web</b></a></p> <p><a href="https://github.com/your-repo-link" style="color: #007ACC;"><b>Github Repo</b></a></p> <p><a href="https://github.gatech.edu/yzhou851/7641Spr24/blob/main/final/Final%20Report.pdf" style="color: #007ACC;"><b>Report</b></a></p> <h2 id="video-presentation-youtube">Video Presentation Youtube</h2> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <iframe src="https://www.youtube.com/embed/v=v03jaGKxJPM" class="img-fluid rounded z-depth-1" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="" width="auto" height="auto"/> </figure> </div> </div>]]></content><author><name></name></author><category term="class"/><category term="Personal"/><summary type="html"><![CDATA[Coding]]></summary></entry><entry><title type="html">Portfolio Highlights at CADG</title><link href="https://ylz1992.github.io/personalweb/blog/2024/Portfolio-Highlights-at-CADG/" rel="alternate" type="text/html" title="Portfolio Highlights at CADG"/><published>2024-01-26T00:00:00+00:00</published><updated>2024-01-26T00:00:00+00:00</updated><id>https://ylz1992.github.io/personalweb/blog/2024/Portfolio%20Highlights%20at%20CADG</id><content type="html" xml:base="https://ylz1992.github.io/personalweb/blog/2024/Portfolio-Highlights-at-CADG/"><![CDATA[<p>This is my design works during 2017-2023 in <a href="https://cadg.com.cn/en/about/">China Architecture Design &amp; Research Group</a>.</p> <div class="row"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/personalweb/assets/img/track-480.webp 480w,/personalweb/assets/img/track-800.webp 800w,/personalweb/assets/img/track-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/personalweb/assets/img/track.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" title="example image" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> Co-designer: National Sliding Center. <a href="https://www.thepaper.cn/newsDetail_forward_16791169">å›½å®¶é›ªè½¦é›ªæ©‡ä¸­å¿ƒ</a> </div> <div class="row"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/personalweb/assets/img/middleplatform-480.webp 480w,/personalweb/assets/img/middleplatform-800.webp 800w,/personalweb/assets/img/middleplatform-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/personalweb/assets/img/middleplatform.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" title="example image" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> Designer: National Alpine Skiing Centre, Middle Platform </div> <div class="row"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/personalweb/assets/img/overview-480.webp 480w,/personalweb/assets/img/overview-800.webp 800w,/personalweb/assets/img/overview-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/personalweb/assets/img/overview.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" title="example image" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> Sketch for 2022 Beijing Olympic Yanqing Zong, by <a href="https://en.wikipedia.org/wiki/Li_Xinggang">Xinggang Li</a>. </div> <div class="row"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/personalweb/assets/img/bengzhan-480.webp 480w,/personalweb/assets/img/bengzhan-800.webp 800w,/personalweb/assets/img/bengzhan-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/personalweb/assets/img/bengzhan.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" title="example image" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> Designer: Industrial Construction (No.1 Pumping Station) for 2022 Beijing Olympics. </div> <div class="row"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/personalweb/assets/img/bengzhan2-480.webp 480w,/personalweb/assets/img/bengzhan2-800.webp 800w,/personalweb/assets/img/bengzhan2-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/personalweb/assets/img/bengzhan2.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" title="example image" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> Designer: Industrial construction (N0.2 pumping station) for 2022 Beijing Olympics. </div> <div class="row"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/personalweb/assets/img/haerbin-480.webp 480w,/personalweb/assets/img/haerbin-800.webp 800w,/personalweb/assets/img/haerbin-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/personalweb/assets/img/haerbin.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" title="example image" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> Designer: Haerbin Snow Theater(Really popular during 23~24 winter) </div> <div class="row"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/personalweb/assets/img/YaoqiangAirport-480.webp 480w,/personalweb/assets/img/YaoqiangAirport-800.webp 800w,/personalweb/assets/img/YaoqiangAirport-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/personalweb/assets/img/YaoqiangAirport.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" title="example image" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> Co-designer:Jinan Yaoqiang Airport. </div> <div class="row"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/personalweb/assets/img/zhongyang-480.webp 480w,/personalweb/assets/img/zhongyang-800.webp 800w,/personalweb/assets/img/zhongyang-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/personalweb/assets/img/zhongyang.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" title="example image" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> Conference Hall for Central School of Communist Youth League of China </div> <h2 id="more">More</h2> <ul> <li>Chinese Embassy in Malta</li> <li>Kunshan City Capital Tower</li> <li>Weihai Civic Tower</li> <li>Lanzhou Jinmao Tower</li> </ul>]]></content><author><name></name></author><category term="class"/><category term="Personal"/><summary type="html"><![CDATA[Work]]></summary></entry></feed>